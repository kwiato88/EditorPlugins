!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
Access	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    enum class Access$/;"	g	language:C++	struct:CTagsPlugin::CppTag	access:public
AsyncCall	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^class AsyncCall$/;"	c	language:C++	namespace:CTagsPlugin
AsyncCall	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^AsyncCall::AsyncCall(const std::function<void(void)>& p_call)$/;"	f	language:C++	class:CTagsPlugin::AsyncCall
BUILDTAG_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^#define BUILDTAG_HPP$/;"	d	language:C++
BaseClass	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^    class BaseClass$/;"	c	language:C++	namespace:FirstNamespace	file:
BaseClass2	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^    class BaseClass2$/;"	c	language:C++	namespace:SecondNamespace	file:
COMPOSITETAGPRINTER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^#define COMPOSITETAGPRINTER_HPP$/;"	d	language:C++
CPPTAGMATCHERS_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^#define CPPTAGMATCHERS_HPP$/;"	d	language:C++
CPPTAGPARSER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagBuilder.hpp	/^#define CPPTAGPARSER_HPP$/;"	d	language:C++
CPPTAGPRINTER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagPrinter.hpp	/^#define CPPTAGPRINTER_HPP$/;"	d	language:C++
CPPTAG_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^#define CPPTAG_HPP$/;"	d	language:C++
CTAGSGENERATOR_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsGenerator.hpp	/^#define CTAGSGENERATOR_HPP$/;"	d	language:C++
CTAGSNAVIGATOR_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^#define CTAGSNAVIGATOR_HPP$/;"	d	language:C++
CTAGSPLUGIN_CONFIGGETTER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ConfigGetter.hpp	/^#define CTAGSPLUGIN_CONFIGGETTER_HPP$/;"	d	language:C++
CTAGS_CONTROLLER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^#define CTAGS_CONTROLLER_HPP$/;"	d	language:C++
CTagsController	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^class CTagsController$/;"	c	language:C++	namespace:CTagsPlugin
CTagsController	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^CTagsController::CTagsController($/;"	f	language:C++	class:CTagsPlugin::CTagsController
CTagsGenerator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsGenerator.hpp	/^class CTagsGenerator$/;"	c	language:C++	namespace:CTagsPlugin
CTagsGenerator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^CTagsGenerator::CTagsGenerator(const std::string& p_ctagsExePath, const Fields& p_fields)$/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator
CTagsNavigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^class CTagsNavigator$/;"	c	language:C++	namespace:CTagsPlugin
CTagsNavigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^CTagsNavigator::CTagsNavigator($/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsGenerator.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ConfigGetter.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagBuilder.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagPrinter.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\FileScopedTagFilteringReader.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenerateTagsException.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTag.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTagBuilder.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTagPrinter.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GridViewTagsSelector.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagPrinter.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsReader.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsSelector.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IsTag.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\MultipleTagFilesReader.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagBuilders.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFileReader.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagHolder.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagNotFoundException.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagParser.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinter.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinters.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsReaderException.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsSelector.hpp	/^namespace CTagsPlugin$/;"	n	language:C++
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CompositeTagPrinter.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagBuilder.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagPrinter.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GridViewTagsSelector.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\MultipleTagFilesReader.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagBuilders.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinters.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
CTagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^namespace CTagsPlugin$/;"	n	language:C++	file:
Class	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Class,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
CompositeMatcher	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^class CompositeMatcher$/;"	c	language:C++	namespace:CTagsPlugin
CompositeMatcher	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^CompositeMatcher::CompositeMatcher(TagMatchers p_matchers)$/;"	f	language:C++	class:CTagsPlugin::CompositeMatcher
CompositeTagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^class CompositeTagPrinter: public CTagsPlugin::TagPrinter$/;"	c	language:C++	namespace:CTagsPlugin	inherits:CTagsPlugin::TagPrinter
CompositeTagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CompositeTagPrinter.cpp	/^CompositeTagPrinter::CompositeTagPrinter(const IConfiguration& p_config,  Printers& p_printers)$/;"	f	language:C++	class:CTagsPlugin::CompositeTagPrinter
ConfigGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ConfigGetter.hpp	/^class ConfigGetter : public IConfiguration$/;"	c	language:C++	namespace:CTagsPlugin	inherits:IConfiguration
Cpp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagBuilder.hpp	/^namespace Cpp$/;"	n	language:C++	namespace:CTagsPlugin
Cpp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^namespace Cpp$/;"	n	language:C++	namespace:CTagsPlugin
Cpp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagPrinter.hpp	/^namespace Cpp$/;"	n	language:C++	namespace:CTagsPlugin
Cpp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^namespace Cpp$/;"	n	language:C++	namespace:CTagsPlugin	file:
Cpp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^namespace Cpp$/;"	n	language:C++	namespace:CTagsPlugin	file:
Cpp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^namespace Cpp$/;"	n	language:C++	namespace:CTagsPlugin	file:
CppTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^struct CppTag: public Tag$/;"	s	language:C++	namespace:CTagsPlugin	inherits:Tag
CppTagBuilderTS	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^struct CppTagBuilderTS: public Test$/;"	s	language:C++	namespace:CTagsPlugin	file:	inherits:Test
DerivedClass	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^    class DerivedClass : public FirstNamespace::BaseClass$/;"	c	language:C++	namespace:SecondNamespace	file:	inherits:FirstNamespace::BaseClass
DerivedFrom2Classes	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^    class DerivedFrom2Classes : public DerivedClass, public NestedNamespace::SecondBaseClass$/;"	c	language:C++	namespace:SecondNamespace	file:	inherits:DerivedClass,NestedNamespace::SecondBaseClass
DervedFromBaseClass2	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^    class DervedFromBaseClass2 : public SecondNamespace::BaseClass2$/;"	c	language:C++	namespace:SecondNamespace::NestedNamespace	file:	inherits:SecondNamespace::BaseClass2
Directory	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\SelectorType.hpp	/^    Directory,$/;"	e	language:C++	enum:SelectorType	access:public
DllMain	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\dllmain.cpp	/^BOOL APIENTRY DllMain(HINSTANCE hModule, $/;"	f	language:C++	typeref:typename:BOOL APIENTRY
EXTENSIONFIELDSPARSER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagParser.hpp	/^#define EXTENSIONFIELDSPARSER_HPP$/;"	d	language:C++
EXTENSIONSFIELDS_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^#define EXTENSIONSFIELDS_HPP$/;"	d	language:C++
EmptyStructure	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\EmptyStructure.hpp	/^struct EmptyStructure$/;"	s	language:C++
Enumeration	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Enumeration,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
EnumerationValue	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        EnumerationValue,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
ExtFieldApplier	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^typedef std::function<void(CppTag&, const std::vector<Field>&)> ExtFieldApplier;$/;"	t	language:C++	namespace:CTagsPlugin::Cpp	file:
FILE_SCOPED_TAG_FILTERING_READER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\FileScopedTagFilteringReader.hpp	/^#define FILE_SCOPED_TAG_FILTERING_READER_HPP$/;"	d	language:C++
Field	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^    Field()$/;"	f	language:C++	struct:CTagsPlugin::Field	access:public
Field	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^    Field(const std::string& p_name, const std::string& p_value)$/;"	f	language:C++	struct:CTagsPlugin::Field	access:public
Field	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^struct Field$/;"	s	language:C++	namespace:CTagsPlugin
Fields	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^struct Fields$/;"	s	language:C++	namespace:CTagsPlugin
File	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\SelectorType.hpp	/^    File$/;"	e	language:C++	enum:SelectorType	access:public
FileFormat	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^enum class FileFormat$/;"	g	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	file:
FileScopedTagFilteringReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\FileScopedTagFilteringReader.hpp	/^class FileScopedTagFilteringReader : public ITagsReader$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagsReader
FileScopedTagFilteringReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^FileScopedTagFilteringReader::FileScopedTagFilteringReader($/;"	f	language:C++	class:CTagsPlugin::FileScopedTagFilteringReader
FirstNamespace	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^namespace FirstNamespace$/;"	n	language:C++	file:
Function	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Function,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
FunctionParameter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        FunctionParameter$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
GENERATETAGSEXCEPTION_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenerateTagsException.hpp	/^#define GENERATETAGSEXCEPTION_HPP$/;"	d	language:C++
GENERICKINDTAGBUILDER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTagBuilder.hpp	/^#define GENERICKINDTAGBUILDER_HPP$/;"	d	language:C++
GENERICKINDTAGPRINTER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTagPrinter.hpp	/^#define GENERICKINDTAGPRINTER_HPP$/;"	d	language:C++
GENERICKINDTAG_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTag.hpp	/^#define GENERICKINDTAG_HPP$/;"	d	language:C++
GRID_VIEW_TAGS_SELECTOR_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GridViewTagsSelector.hpp	/^#define GRID_VIEW_TAGS_SELECTOR_HPP$/;"	d	language:C++
GenerateTagsException	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenerateTagsException.hpp	/^    GenerateTagsException()$/;"	f	language:C++	struct:CTagsPlugin::GenerateTagsException	access:public
GenerateTagsException	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenerateTagsException.hpp	/^struct GenerateTagsException : public std::runtime_error$/;"	s	language:C++	namespace:CTagsPlugin	inherits:std::runtime_error
GenericKindTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTag.hpp	/^struct GenericKindTag: public Tag$/;"	s	language:C++	namespace:CTagsPlugin	inherits:Tag
GenericKindTagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTagPrinter.hpp	/^class GenericKindTagPrinter: public CTagsPlugin::TagPrinter$/;"	c	language:C++	namespace:CTagsPlugin	inherits:CTagsPlugin::TagPrinter
GenericKindTagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagPrinter.cpp	/^GenericKindTagPrinter::GenericKindTagPrinter(const IConfiguration& p_config): CTagsPlugin::TagPr/;"	f	language:C++	class:CTagsPlugin::GenericKindTagPrinter
GridView	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^    GridView$/;"	e	language:C++	enum:CTagsPlugin::SelectTagsViewType	access:public
GridViewTagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GridViewTagsSelector.hpp	/^class GridViewTagsSelector : public ITagsSelector$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagsSelector
GridViewTagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GridViewTagsSelector.cpp	/^GridViewTagsSelector::GridViewTagsSelector(NppData& p_nppData, HINSTANCE& p_hModule, std::shared/;"	f	language:C++	class:CTagsPlugin::GridViewTagsSelector
ICONFIGURATION_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^#define ICONFIGURATION_HPP$/;"	d	language:C++
IConfiguration	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^struct IConfiguration$/;"	s	language:C++	namespace:CTagsPlugin
ISTAG_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IsTag.hpp	/^#define ISTAG_HPP$/;"	d	language:C++
ITAGPRINTER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagPrinter.hpp	/^#define ITAGPRINTER_HPP$/;"	d	language:C++
ITAGSREADER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsReader.hpp	/^#define ITAGSREADER_HPP$/;"	d	language:C++
ITagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagPrinter.hpp	/^struct ITagPrinter$/;"	s	language:C++	namespace:CTagsPlugin
ITagsReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsReader.hpp	/^struct ITagsReader$/;"	s	language:C++	namespace:CTagsPlugin
ITagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsSelector.hpp	/^struct ITagsSelector$/;"	s	language:C++	namespace:CTagsPlugin
I_TAGS_SELECTOR_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsSelector.hpp	/^#define I_TAGS_SELECTOR_HPP$/;"	d	language:C++
InLineComment	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\InLineComment.hpp	/^struct InLineComment \/\/ comment$/;"	s	language:C++
InLineCommentWithBackShash	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\InLineComment.hpp	/^struct InLineCommentWithBackShash \/\/  a \\ b$/;"	s	language:C++
Internal	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^    Internal,$/;"	e	language:C++	enum:CTagsPlugin::TagReaderType	access:public
IsChildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^class IsChildTag$/;"	c	language:C++	namespace:CTagsPlugin::Cpp
IsChildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^struct IsChildTag: public CompositeMatcher$/;"	s	language:C++	namespace:CTagsPlugin	inherits:CompositeMatcher
IsChildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^IsChildTag::IsChildTag(const std::string& p_parentName)$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsChildTag
IsChildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^IsChildTag::IsChildTag(const Tag& p_parentTag)$/;"	f	language:C++	class:CTagsPlugin::IsChildTag
IsComplexTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^class IsComplexTag$/;"	c	language:C++	namespace:CTagsPlugin::Cpp
IsComplexTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^struct IsComplexTag: public CompositeMatcher$/;"	s	language:C++	namespace:CTagsPlugin	inherits:CompositeMatcher
IsComplexTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^IsComplexTag::IsComplexTag()$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsComplexTag
IsComplexTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^IsComplexTag::IsComplexTag()$/;"	f	language:C++	class:CTagsPlugin::IsComplexTag
IsSelectedKindTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^    IsSelectedKindTag(const std::set<CppTag::Kind>& p_kinds)$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsSelectedKindTag	file:	access:public
IsSelectedKindTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^class IsSelectedKindTag$/;"	c	language:C++	namespace:CTagsPlugin::Cpp	file:
IsTagWithName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^class IsTagWithName$/;"	c	language:C++	namespace:CTagsPlugin::Cpp
IsTagWithName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^struct IsTagWithName: public CompositeMatcher$/;"	s	language:C++	namespace:CTagsPlugin	inherits:CompositeMatcher
IsTagWithName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^IsTagWithName::IsTagWithName(const std::string& p_name)$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsTagWithName
IsTagWithName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^IsTagWithName::IsTagWithName(const std::string& p_expectedName)$/;"	f	language:C++	class:CTagsPlugin::IsTagWithName
Iterator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^    class Iterator$/;"	c	language:C++	class:CTagsPlugin::TagFile	access:public
Iterator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator::Iterator()$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator
Iterator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator::Iterator(const Iterator& p_iter)$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator
Iterator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator::Iterator(long p_pos, std::ifstream* p_file)$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator
Kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    enum class Kind$/;"	g	language:C++	struct:CTagsPlugin::CppTag	access:public
LOCATIONS_AMOUND_TO_CUT	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    static const int LOCATIONS_AMOUND_TO_CUT = 10;$/;"	m	language:C++	class:CTagsPlugin::Navigator	typeref:typename:const int	access:private
ListView	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^    ListView,$/;"	e	language:C++	enum:CTagsPlugin::SelectTagsViewType	access:public
LocalVar	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        LocalVar,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
Location	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^struct Location$/;"	s	language:C++	namespace:CTagsPlugin
MAX_LOCATIONS_QUEUE_LENGTH	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    static const int MAX_LOCATIONS_QUEUE_LENGTH = 64;$/;"	m	language:C++	class:CTagsPlugin::Navigator	typeref:typename:const int	access:private
MULTIPLE_TAG_FILES_READER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\MultipleTagFilesReader.hpp	/^#define MULTIPLE_TAG_FILES_READER_HPP$/;"	d	language:C++
Macro	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Macro,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
MaxLengthGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	MaxLengthGetter() { nameMaxLength = 0; pathMaxLength = 0; }$/;"	f	language:C++	struct:CTagsPlugin::__anonb69117c90108::MaxLengthGetter	file:	access:public
MaxLengthGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^struct MaxLengthGetter$/;"	s	language:C++	namespace:CTagsPlugin::__anonb69117c90108	file:
Member	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Member,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
MultipleTagFilesReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\MultipleTagFilesReader.hpp	/^class MultipleTagFilesReader : public ITagsReader$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagsReader
MultipleTagFilesReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\MultipleTagFilesReader.cpp	/^MultipleTagFilesReader::MultipleTagFilesReader(TagReaderFactory p_readerFactory, IConfiguration&/;"	f	language:C++	class:CTagsPlugin::MultipleTagFilesReader
NAVIGATOR_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^#define NAVIGATOR_HPP$/;"	d	language:C++
NPP_PLUGIN_NAME	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^const TCHAR NPP_PLUGIN_NAME[] = TEXT("CTags Plugin");$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:const TCHAR[]
Namespace	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Namespace,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
Navigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^class Navigator$/;"	c	language:C++	namespace:CTagsPlugin
Navigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^Navigator::Navigator(boost::shared_ptr<Plugin::ILocationSetter> p_locationSetter,$/;"	f	language:C++	class:CTagsPlugin::Navigator
NestedNamespace	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^namespace NestedNamespace$/;"	n	language:C++	namespace:SecondNamespace	file:
None	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        None,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Access	access:public
None	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        None,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
NppPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^namespace NppPlugin$/;"	n	language:C++
NppPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^namespace NppPlugin$/;"	n	language:C++	file:
OtherTestTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^struct OtherTestTag: public Tag$/;"	s	language:C++	namespace:CTagsPlugin	file:	inherits:Tag
PLUGIN_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^#define PLUGIN_HPP$/;"	d	language:C++
Printer	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^typedef std::pair<ShouldApply, std::shared_ptr<ITagPrinter>> Printer;$/;"	t	language:C++	namespace:CTagsPlugin	typeref:typename:std::pair<ShouldApply,std::shared_ptr<ITagPrinter>>
Printer	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinters.hpp	/^typedef std::pair<ShouldApply, std::shared_ptr<ITagPrinter>> Printer;$/;"	t	language:C++	namespace:CTagsPlugin	typeref:typename:std::pair<ShouldApply,std::shared_ptr<ITagPrinter>>
Printers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^typedef std::list<Printer> Printers;$/;"	t	language:C++	namespace:CTagsPlugin	typeref:typename:std::list<Printer>
Printers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinters.hpp	/^typedef std::list<Printer> Printers;$/;"	t	language:C++	namespace:CTagsPlugin	typeref:typename:std::list<Printer>
Private	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Private,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Access	access:public
Protected	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Protected,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Access	access:public
Public	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Public$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Access	access:public
READTAGSPROXY_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^#define READTAGSPROXY_HPP$/;"	d	language:C++
ReadTagExe	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^    ReadTagExe$/;"	e	language:C++	enum:CTagsPlugin::TagReaderType	access:public
ReadTagsProxy	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^class ReadTagsProxy : public ITagsReader$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagsReader
ReadTagsProxy	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^ReadTagsProxy::ReadTagsProxy($/;"	f	language:C++	class:CTagsPlugin::ReadTagsProxy
SELECTOR_TYPE_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\SelectorType.hpp	/^#define SELECTOR_TYPE_HPP$/;"	d	language:C++
SecondBaseClass	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^    class SecondBaseClass$/;"	c	language:C++	namespace:SecondNamespace::NestedNamespace	file:
SecondNamespace	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^namespace SecondNamespace$/;"	n	language:C++	file:
SelectTagsViewType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^enum class SelectTagsViewType$/;"	g	language:C++	namespace:CTagsPlugin
SelectorFactory	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^typedef boost::function<boost::shared_ptr<ITagsSelector>()> SelectorFactory;$/;"	t	language:C++	namespace:CTagsPlugin
SelectorType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\SelectorType.hpp	/^enum class SelectorType$/;"	g	language:C++
ShouldApply	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^typedef std::function<bool(const Tag&)> ShouldApply;$/;"	t	language:C++	namespace:CTagsPlugin
ShouldApply	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^typedef std::function<bool (const Tag& tagToVerify)> ShouldApply;$/;"	t	language:C++	namespace:CTagsPlugin
ShouldApply	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinters.hpp	/^typedef std::function<bool(const Tag&)> ShouldApply;$/;"	t	language:C++	namespace:CTagsPlugin
Sorted	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^    Sorted,$/;"	e	language:C++	enum:CTagsPlugin::__anon4c9e38480108::FileFormat	file:	access:public
Struct	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Struct,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
TAGBUILDERS_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagBuilders.hpp	/^#define TAGBUILDERS_HPP$/;"	d	language:C++
TAGFILEREADER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFileReader.hpp	/^#define TAGFILEREADER_HPP$/;"	d	language:C++
TAGFILE_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^#define TAGFILE_HPP$/;"	d	language:C++
TAGHOLDER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagHolder.hpp	/^#define TAGHOLDER_HPP$/;"	d	language:C++
TAGNOTFOUNDEXCEPTION_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagNotFoundException.hpp	/^#define TAGNOTFOUNDEXCEPTION_HPP$/;"	d	language:C++
TAGPRINTERS_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinters.hpp	/^#define TAGPRINTERS_HPP$/;"	d	language:C++
TAGPRINTER_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinter.hpp	/^#define TAGPRINTER_HPP$/;"	d	language:C++
TAGS_READER_EXCEPTION_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsReaderException.hpp	/^#define TAGS_READER_EXCEPTION_HPP$/;"	d	language:C++
TAGS_SELECTOR_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsSelector.hpp	/^#define TAGS_SELECTOR_HPP$/;"	d	language:C++
TAG_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^#define TAG_HPP$/;"	d	language:C++
TAG_MATCHERS_HPP	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^#define TAG_MATCHERS_HPP$/;"	d	language:C++
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^TEST(GenericKindTagBuilderTS, shouldBuildEmptyKind)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^TEST(GenericKindTagBuilderTS, shouldParseKind)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^TEST(TagMatcherTS, cpp_shoudReturnFalseWhenNoSeparator)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^TEST(TagMatcherTS, cpp_shouldCheckIfTagIsComplex)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^TEST(TagMatcherTS, cpp_shouldMatchTagName)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^TEST(TagMatcherTS, cpp_shouldReturnFalseForNotMatchedParrent)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^TEST(TagMatcherTS, cpp_shouldReturnFalseWhenGivenEmptyParrentName)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^TEST(TagMatcherTS, cpp_shouldReturnTrue)$/;"	f	language:C++	namespace:CTagsPlugin
TEST	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST(IsTag, shouldVerifyTagType)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldAppendFirstFoundParrentName)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldAppendParrentName)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldBuildTagWithKind)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldIgnoreUnknownExtensionFileds)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldIgnoreUnknownKindFiled)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldParseAccesField)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldParseSignatureField)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^TEST_F(CppTagBuilderTS, shouldParseTyperefField)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldIgnoreIncompleteExtensionFiled)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldIgnoreMiddleTokenIfThreeProvided)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldNotParseInvalidNumberInAddr)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseAddrContainingLineNumber)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseBaseTag)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseBaseTagWithSpacesInAddr)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseBaseTagWithTabInAddr)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseEmptyTag)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseExtFields)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseFieldValueWithSpaces)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseFieldWithEmptyValue)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseFileScopedTag)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseShortenEndAddrMarker)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldParseShortenedKindFiled)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldReturnEmptyAddrWhenMissingAddrMarkers)$/;"	f	language:C++	namespace:CTagsPlugin
TEST_F	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^TEST_F(TagParserTS, shouldThrowWhenMissingFiled)$/;"	f	language:C++	namespace:CTagsPlugin
Tag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^struct Tag$/;"	s	language:C++	namespace:CTagsPlugin
TagBuilder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^typedef std::function<TagHolder (const Tag& p_baseTag, const std::vector<Field>& p_extFields)> T/;"	t	language:C++	namespace:CTagsPlugin
TagFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^class TagFile$/;"	c	language:C++	namespace:CTagsPlugin
TagFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::TagFile(const std::string& p_filePath)$/;"	f	language:C++	class:CTagsPlugin::TagFile
TagFilePathProvider	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^typedef boost::function<std::string()> TagFilePathProvider;$/;"	t	language:C++	namespace:CTagsPlugin
TagFileReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFileReader.hpp	/^class TagFileReader: public ITagsReader$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagsReader
TagFileReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^TagFileReader::TagFileReader(std::function<std::string()> p_tagFilePath)$/;"	f	language:C++	class:CTagsPlugin::TagFileReader
TagHolder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagHolder.hpp	/^class TagHolder$/;"	c	language:C++	namespace:CTagsPlugin
TagHolder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^TagHolder::TagHolder(): m_tag(new Tag())$/;"	f	language:C++	class:CTagsPlugin::TagHolder
TagHolder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^TagHolder::TagHolder(Tag* p_tag): m_tag(p_tag)$/;"	f	language:C++	class:CTagsPlugin::TagHolder
TagHolder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^TagHolder::TagHolder(TagHolder&& p_tag): m_tag(std::move(p_tag.m_tag))$/;"	f	language:C++	class:CTagsPlugin::TagHolder
TagHolder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^TagHolder::TagHolder(const Tag& p_tag): m_tag(p_tag.clone())$/;"	f	language:C++	class:CTagsPlugin::TagHolder
TagHolder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^TagHolder::TagHolder(const TagHolder& p_tag): m_tag(p_tag->clone())$/;"	f	language:C++	class:CTagsPlugin::TagHolder
TagMatcher	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsReader.hpp	/^typedef std::function<bool (const Tag&)> TagMatcher;$/;"	t	language:C++	namespace:CTagsPlugin
TagMatchers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^typedef std::list<std::pair<ShouldApply, TagMatcher>> TagMatchers;$/;"	t	language:C++	namespace:CTagsPlugin	typeref:typename:std::list<std::pair<ShouldApply,TagMatcher>>
TagNotFoundException	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagNotFoundException.hpp	/^    TagNotFoundException() : std::runtime_error("Tag not found")$/;"	f	language:C++	struct:CTagsPlugin::TagNotFoundException	access:public
TagNotFoundException	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagNotFoundException.hpp	/^struct TagNotFoundException : public std::runtime_error$/;"	s	language:C++	namespace:CTagsPlugin	inherits:std::runtime_error
TagParserTS	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^struct TagParserTS : public Test$/;"	s	language:C++	namespace:CTagsPlugin	file:	inherits:Test
TagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagPrinter.hpp	/^class TagPrinter: public CTagsPlugin::TagPrinter$/;"	c	language:C++	namespace:CTagsPlugin::Cpp	inherits:CTagsPlugin::TagPrinter
TagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinter.hpp	/^class TagPrinter: public ITagPrinter$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagPrinter
TagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^TagPrinter::TagPrinter(const IConfiguration& p_config): CTagsPlugin::TagPrinter(p_config)$/;"	f	language:C++	class:CTagsPlugin::Cpp::TagPrinter
TagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^TagPrinter::TagPrinter(const IConfiguration& p_config)$/;"	f	language:C++	class:CTagsPlugin::TagPrinter
TagReaderFactory	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\MultipleTagFilesReader.hpp	/^typedef boost::function<boost::shared_ptr<ITagsReader>(const std::string& p_tagFile)> TagReaderF/;"	t	language:C++	namespace:CTagsPlugin
TagReaderType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^enum class TagReaderType$/;"	g	language:C++	namespace:CTagsPlugin
TagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^class TagsPlugin$/;"	c	language:C++	namespace:NppPlugin
TagsPlugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^TagsPlugin::TagsPlugin()$/;"	f	language:C++	class:NppPlugin::TagsPlugin
TagsReaderException	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsReaderException.hpp	/^    TagsReaderException(std::string p_message)$/;"	f	language:C++	struct:CTagsPlugin::TagsReaderException	access:public
TagsReaderException	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsReaderException.hpp	/^struct TagsReaderException : public std::runtime_error$/;"	s	language:C++	namespace:CTagsPlugin	inherits:std::runtime_error
TagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsSelector.hpp	/^class TagsSelector : public ITagsSelector$/;"	c	language:C++	namespace:CTagsPlugin	inherits:ITagsSelector
TagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^TagsSelector::TagsSelector(boost::shared_ptr<Plugin::IItemsSelector> p_selector)$/;"	f	language:C++	class:CTagsPlugin::TagsSelector
TestTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^struct TestTag: public Tag$/;"	s	language:C++	namespace:CTagsPlugin	file:	inherits:Tag
ToStringConverter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	ToStringConverter(size_t p_maxNameLength, size_t p_maxPathLength)$/;"	f	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	file:	access:public
ToStringConverter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^class ToStringConverter$/;"	c	language:C++	namespace:CTagsPlugin::__anonb69117c90108	file:
Typedef	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Typedef,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
Union	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Union,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
Unsorted	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^    Unsorted$/;"	e	language:C++	enum:CTagsPlugin::__anon4c9e38480108::FileFormat	file:	access:public
UserInputError	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^    UserInputError(const std::string& p_message)$/;"	f	language:C++	struct:CTagsPlugin::__anond0a2720f0108::UserInputError	file:	access:public
UserInputError	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^struct UserInputError: public std::runtime_error$/;"	s	language:C++	namespace:CTagsPlugin::__anond0a2720f0108	file:	inherits:std::runtime_error
Variable	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^        Variable,$/;"	e	language:C++	enum:CTagsPlugin::CppTag::Kind	access:public
__anon0034f75c0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin::Cpp	file:
__anon0629b8c60108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anon191b4b5f0103	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^    auto field = boost::range::find_if(p_extFields, [&](const Field& f){ return f.name == p_fiel/;"	f	language:C++	function:CTagsPlugin::Cpp::fildFieldValueByName	file:
__anon191b4b5f0203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^        [&](const Field& f){ return isAnyOf(f.name, parentTypes);});$/;"	f	language:C++	function:CTagsPlugin::Cpp::findParentName	file:
__anon27f2ae8a0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anon27f2ae8a0203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^		p_tags | boost::adaptors::filtered([&](const Tag& p){ return ( (!p.isFileScoped) || (fixPath(p/;"	f	language:C++	function:CTagsPlugin::FileScopedTagFilteringReader::filter	file:
__anon39924b4a0103	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GridViewTagsSelector.cpp	/^        [&](const Tag& t) { return m_printer->print(t); });$/;"	f	language:C++	function:CTagsPlugin::GridViewTagsSelector::selectTag	file:
__anon4495cc920108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anon4c9e38480108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anon729d213f0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagBuilder.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anon729d213f0203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagBuilder.cpp	/^    auto kind = boost::range::find_if(p_extFields, [&](const Field& f){ return f.name == "kind";/;"	f	language:C++	function:CTagsPlugin::__anon729d213f0108::getKind	file:
__anon787f93a80103	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^    return boost::make_shared<CTagsPlugin::ReadTagsProxy>(m_config,[=](){ return p_tagFilePath; /;"	f	language:C++	function:NppPlugin::TagsPlugin::buildReadTagsProxy	file:
__anon787f93a80203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^    return boost::make_shared<CTagsPlugin::TagFileReader>([=](){ return p_tagFilePath; });$/;"	f	language:C++	function:NppPlugin::TagsPlugin::buildTagFileReader	file:
__anon7c10022c0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinters.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anon9d41adb50108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anona19bd1a80108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anonaf07affa0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anonb59a7c0f0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin::Cpp	file:
__anonb59a7c0f0203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^                           [&](const CppTag::Kind& k){ return k == tag.kind; });$/;"	f	language:C++	function:CTagsPlugin::Cpp::IsSelectedKindTag::operator ()	file:
__anonb69117c90108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anonb95b32c20103	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^                       [](char c) { return std::isdigit(c); });$/;"	f	language:C++	function:CTagsPlugin::isNumber	file:
__anonb95b32c20203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^	return boost::range::find_if(p_extensions, [](const Field& p) { return p.name == "file"; }) != /;"	f	language:C++	function:CTagsPlugin::hasFileField	file:
__anonb95b32c20303	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^        [](const Field& f){ return f.name == "language"; });$/;"	f	language:C++	function:CTagsPlugin::getLanguage	file:
__anond0a2720f0108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anond0a2720f0203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^        std::async([&](){m_call(); m_lock.unlock();});$/;"	f	language:C++	function:CTagsPlugin::AsyncCall::operator ()	file:
__anondcd3c7390108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anone618ad160108	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^{$/;"	n	language:C++	namespace:CTagsPlugin	file:
__anone618ad160203	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^                       [](char c) { return std::isdigit(c); });$/;"	f	language:C++	function:CTagsPlugin::__anone618ad160108::isNumber	file:
__anone618ad160303	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^        | boost::adaptors::filtered([&](const Tag& t){ return complex(t); }),$/;"	f	language:C++	function:CTagsPlugin::CTagsNavigator::getComplexTags	file:
access	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    CppTag::Access access;$/;"	m	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:CppTag::Access	access:public
access	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^    bool access;$/;"	m	language:C++	struct:CTagsPlugin::Fields	typeref:typename:bool	access:public
access	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^std::string TagPrinter::access(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::TagPrinter	typeref:typename:std::string
access	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::access(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
addLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::addLocation(const Location& p_location)$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
addLocationOnTop	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::addLocationOnTop(const Location& p_location)$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
addTagIfMatched	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^void addTagIfMatched(const std::string& p_line, std::vector<TagHolder>& p_found, const TagMatche/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:void
addr	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    std::string addr;$/;"	m	language:C++	struct:CTagsPlugin::Tag	typeref:typename:std::string	access:public
addr	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::addr(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
advance	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^void TagFile::Iterator::advance(long p_charCount)$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:void
advanceLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^void TagFile::Iterator::advanceLine()$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:void
alwaysTrue	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^bool alwaysTrue(const Tag&)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
appendAddr	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^void ToStringConverter::appendAddr(const Tag& p_tag)$/;"	f	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:void
appendField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^void appendField(std::string& p_fields, bool p_field, const std::string& p_value)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4495cc920108	typeref:typename:void
appendName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^void ToStringConverter::appendName(const Tag& p_tag)$/;"	f	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:void
appendParentName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^std::string appendParentName(const std::string& p_tagName, const std::vector<Field>& p_extFields/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:std::string
appendPath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^void ToStringConverter::appendPath(const Tag& p_tag)$/;"	f	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:void
appendTagsCommand	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^std::string CTagsGenerator::appendTagsCommand(const std::string& p_outFile, const std::string& p/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::string
applyParentName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^void applyParentName(CppTag& p_outTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:void
asserEq	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^    void asserEq(const Tag& p_expected, const Tag& p_actual)$/;"	f	language:C++	struct:CTagsPlugin::CppTagBuilderTS	typeref:typename:void	file:	access:public
assertEq	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^void assertEq(const Tag& p_lhs, const Tag& p_rhs)$/;"	f	language:C++	namespace:CTagsPlugin::__anona19bd1a80108	typeref:typename:void
assertEq	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^	void assertEq(const Tag& p_expected, const Tag& p_actual)$/;"	f	language:C++	struct:CTagsPlugin::TagParserTS	typeref:typename:void	file:	access:public
assign	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    void assign(const Tag& p_tag)$/;"	f	language:C++	struct:CTagsPlugin::Tag	typeref:typename:void	access:public
baseClasses	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    std::vector<std::string> baseClasses;$/;"	m	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:std::vector<std::string>	access:public
baseTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^    Tag baseTag()$/;"	f	language:C++	struct:CTagsPlugin::CppTagBuilderTS	typeref:typename:Tag	file:	access:public
begin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator TagFile::begin()$/;"	f	language:C++	class:CTagsPlugin::TagFile	typeref:typename:TagFile::Iterator
binSearch	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^TagFile::Iterator binSearch(TagFile::Iterator p_first, TagFile::Iterator p_last, const std::stri/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:TagFile::Iterator
buildBaseTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^Tag buildBaseTag()$/;"	f	language:C++	namespace:CTagsPlugin::__anona19bd1a80108	typeref:typename:Tag
buildCommands	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^std::list<std::string> CTagsGenerator::buildCommands(const std::string& p_outFile, const std::ve/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::list<std::string>
buildCppComplexTypes	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^std::set<CppTag::Kind> buildCppComplexTypes()$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:std::set<CppTag::Kind>
buildExtensionsString	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^	std::string buildExtensionsString(const std::vector<std::string>& p_extensions)$/;"	f	language:C++	struct:CTagsPlugin::TagParserTS	typeref:typename:std::string	file:	access:public
buildFieldsParam	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^std::string CTagsGenerator::buildFieldsParam() const$/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::string
buildFillers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^std::list<ExtFieldApplier> buildFillers()$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:std::list<ExtFieldApplier>
buildGenericKindTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagBuilder.cpp	/^TagHolder buildGenericKindTag(const Tag& p_baseTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagHolder
buildGridViewSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsSelector> TagsPlugin::buildGridViewSelector()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsSelector>
buildIsChildTagMatchers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^TagMatchers buildIsChildTagMatchers(const Tag& p_parentTag)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagMatchers
buildIsCompexTagMatchers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^TagMatchers buildIsCompexTagMatchers()$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagMatchers
buildIsTagWithName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^TagMatchers buildIsTagWithName(const std::string& p_expectedName)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagMatchers
buildListViewSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsSelector> TagsPlugin::buildListViewSelector()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsSelector>
buildNativeTagReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsReader> TagsPlugin::buildNativeTagReader(const std::string& /;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsReader>
buildOutFileParam	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^std::string CTagsGenerator::buildOutFileParam(const std::string& p_outFile) const$/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::string
buildReadTagsProxy	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsReader> TagsPlugin::buildReadTagsProxy(const std::string& p_/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsReader>
buildSrcDirParam	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^std::string CTagsGenerator::buildSrcDirParam(const std::string& p_sourceDir) const$/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::string
buildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^TagHolder buildTag(const Tag& p_baseTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:TagHolder
buildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^    CppTag buildTag(const std::string& p_name,$/;"	f	language:C++	struct:CTagsPlugin::CppTagBuilderTS	typeref:typename:CppTag	file:	access:public
buildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\GenericKindTagBuilderTS.cpp	/^GenericKindTag buildTag(const std::string& p_kind)$/;"	f	language:C++	namespace:CTagsPlugin::__anona19bd1a80108	typeref:typename:GenericKindTag
buildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^CppTag buildTag(CppTag::Kind p_kind)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:CppTag
buildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^CppTag buildTag(const std::string& p_name)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:CppTag
buildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^	Tag buildTag(const std::string& p_name, const std::string& p_path, const std::string& p_addr)$/;"	f	language:C++	struct:CTagsPlugin::TagParserTS	typeref:typename:Tag	file:	access:public
buildTagBuilders	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagBuilders.cpp	/^std::map<std::string, TagBuilder> buildTagBuilders()$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::map<std::string,TagBuilder>
buildTagFileReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsReader> TagsPlugin::buildTagFileReader(const std::string& p_/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsReader>
buildTagPrinters	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinters.cpp	/^Printers buildTagPrinters(const IConfiguration& p_config)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:Printers
buildTagReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsReader> TagsPlugin::buildTagReader(const std::string& p_tagF/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsReader>
buildTagString	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^	std::string buildTagString(const std::string& p_name, const std::string& p_path, const std::str/;"	f	language:C++	struct:CTagsPlugin::TagParserTS	typeref:typename:std::string	file:	access:public
buildTagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsSelector> TagsPlugin::buildTagsSelector()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsSelector>
canGoToNextLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^bool Navigator::canGoToNextLocation() const$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:bool
canGoToPreviousLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^bool Navigator::canGoToPreviousLocation() const$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:bool
cleanup	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::cleanup()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
clear	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::clear()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
clear	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::clear()$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
clearTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::clearTags()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
clearTagsSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey clearTagsSk   = {true,  true, false, 'C'};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
clone	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    virtual Tag* clone() const$/;"	f	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:Tag *	access:public
clone	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTag.hpp	/^    virtual Tag* clone() const$/;"	f	language:C++	struct:CTagsPlugin::GenericKindTag	typeref:typename:Tag *	access:public
clone	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    virtual Tag* clone() const$/;"	f	language:C++	struct:CTagsPlugin::Tag	typeref:typename:Tag *	access:public
clone	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^    virtual Tag* clone() const$/;"	f	language:C++	struct:CTagsPlugin::OtherTestTag	typeref:typename:Tag *	file:	access:public
clone	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^    virtual Tag* clone() const$/;"	f	language:C++	struct:CTagsPlugin::TestTag	typeref:typename:Tag *	file:	access:public
columNumber	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    int columNumber;$/;"	m	language:C++	struct:CTagsPlugin::Location	typeref:typename:int	access:public
commandMenuCleanUp	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::commandMenuCleanUp()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
commandMenuInit	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::commandMenuInit(NppData p_nppData)$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
compareName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^bool compareName(const Tag& p_tagToVerify, std::string p_expectedName)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
compareTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^bool compareTags(const Tag& p_lhs, const Tag& p_rhs)$/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:bool
convertToLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^Location convertToLocation(const Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:Location
createTagsController	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::createTagsController()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
cutComment	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::string cutComment(const std::string& p_line)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::string
cutFilesDirs	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^std::vector<TagHolder> TagsSelector::cutFilesDirs(const std::vector<TagHolder>& p_tags)$/;"	f	language:C++	class:CTagsPlugin::TagsSelector	typeref:typename:std::vector<TagHolder>
cutLocationsQueue	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::cutLocationsQueue()$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
decreaseLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^void TagFile::Iterator::decreaseLine()$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:void
defaultBuilder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^TagHolder defaultBuilder(const Tag& p_baseTag, const std::vector<Field>&)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagHolder
deleteNextLocations	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::deleteNextLocations()$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
end	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator TagFile::end()$/;"	f	language:C++	class:CTagsPlugin::TagFile	typeref:typename:TagFile::Iterator
eof	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^bool TagFile::eof() const$/;"	f	language:C++	class:CTagsPlugin::TagFile	typeref:typename:bool
executeCommand	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^void CTagsGenerator::executeCommand(const std::string& p_commandString) const$/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:void
executeCommand	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^std::string ReadTagsProxy::executeCommand(const std::string& p_commad) const$/;"	f	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:std::string
fildFieldValueByName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^std::string fildFieldValueByName(const std::vector<Field>& p_extFields,$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:std::string
file	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^	bool file;$/;"	m	language:C++	struct:CTagsPlugin::Fields	typeref:typename:bool	access:public
file	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::file(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
filePath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    std::string filePath;$/;"	m	language:C++	struct:CTagsPlugin::Location	typeref:typename:std::string	access:public
filePath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^const std::string filePath = "d:\\\\Dir1\\\\dir2\\\\file.cpp";$/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
filePosition	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^long TagFile::Iterator::filePosition() const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:long
fillAccess	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^void fillAccess(CppTag& p_outTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:void
fillBaseClasses	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^void fillBaseClasses(CppTag& p_outTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:void
fillKind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^void fillKind(CppTag& p_outTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:void
fillSignature	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^void fillSignature(CppTag& p_outTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:void
fillType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^void fillType(CppTag& p_outTag, const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:void
filter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^std::vector<TagHolder> FileScopedTagFilteringReader::filter(const std::vector<TagHolder> p_tags)/;"	f	language:C++	class:CTagsPlugin::FileScopedTagFilteringReader	typeref:typename:std::vector<TagHolder>
find	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::find()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
findAddrEndMarker	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::size_t findAddrEndMarker(const std::string& p_tagFileLine)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::size_t
findBeginLinePos	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^long findBeginLinePos(long pos, std::ifstream& file)$/;"	f	language:C++	namespace:CTagsPlugin::__anon9d41adb50108	typeref:typename:long
findFirstMatchingTagLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^TagFile::Iterator findFirstMatchingTagLine(TagFile::Iterator p_line, const std::string& p_tagNam/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:TagFile::Iterator
findInFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^std::tuple<int, int> findInFile(std::ifstream& p_file, const std::string& p_addr)$/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:std::tuple<int,int>
findLastMatchingTagLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^TagFile::Iterator findLastMatchingTagLine(TagFile::Iterator p_line, const std::string& p_tagName/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:TagFile::Iterator
findParentName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^boost::optional<std::string> findParentName(const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:boost::optional<std::string>
findSecondSeparator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::string::size_type findSecondSeparator(const std::string& p_field, const std::string::size_t/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::string::size_type
findStringPositionInFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^std::tuple<int, int> findStringPositionInFile(std::ifstream& p_file, const std::string& p_string/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:std::tuple<int,int>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^std::vector<TagHolder> findTag(boost::shared_ptr<ITagsReader> p_tagsReader, const T& p_toFind)$/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^std::vector<TagHolder> FileScopedTagFilteringReader::findTag(TagMatcher p_matcher) const$/;"	f	language:C++	class:CTagsPlugin::FileScopedTagFilteringReader	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^std::vector<TagHolder> FileScopedTagFilteringReader::findTag(const std::string& p_tagName) const$/;"	f	language:C++	class:CTagsPlugin::FileScopedTagFilteringReader	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\MultipleTagFilesReader.cpp	/^std::vector<TagHolder> MultipleTagFilesReader::findTag(TagMatcher p_matcher) const$/;"	f	language:C++	class:CTagsPlugin::MultipleTagFilesReader	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\MultipleTagFilesReader.cpp	/^std::vector<TagHolder> MultipleTagFilesReader::findTag(const std::string& p_tagName) const$/;"	f	language:C++	class:CTagsPlugin::MultipleTagFilesReader	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::findTag()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^std::vector<TagHolder> ReadTagsProxy::findTag(TagMatcher p_matcher) const$/;"	f	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^std::vector<TagHolder> ReadTagsProxy::findTag(const std::string& p_tagName) const$/;"	f	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> TagFileReader::findTag(TagMatcher p_matcher) const$/;"	f	language:C++	class:CTagsPlugin::TagFileReader	typeref:typename:std::vector<TagHolder>
findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> TagFileReader::findTag(const std::string& p_tagName) const$/;"	f	language:C++	class:CTagsPlugin::TagFileReader	typeref:typename:std::vector<TagHolder>
findTagByMatcher	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> TagFileReader::findTagByMatcher(TagMatcher p_matcher) const$/;"	f	language:C++	class:CTagsPlugin::TagFileReader	typeref:typename:std::vector<TagHolder>
findTagByName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> TagFileReader::findTagByName(const std::string& p_tagName) const$/;"	f	language:C++	class:CTagsPlugin::TagFileReader	typeref:typename:std::vector<TagHolder>
findTagInFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\MultipleTagFilesReader.cpp	/^std::vector<TagHolder> MultipleTagFilesReader::findTagInFile(const std::string& p_tagFile, Match/;"	f	language:C++	class:CTagsPlugin::MultipleTagFilesReader	typeref:typename:std::vector<TagHolder>
findTagSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey findTagSk     = {false, true, false, VK_SPACE};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
findTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\MultipleTagFilesReader.cpp	/^std::vector<TagHolder> MultipleTagFilesReader::findTags(Matcher p_tagMatcher) const$/;"	f	language:C++	class:CTagsPlugin::MultipleTagFilesReader	typeref:typename:std::vector<TagHolder>
fixAddrField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^void fixAddrField(Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin::__anon0629b8c60108	typeref:typename:void
fixAddrField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^void fixAddrField(Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:void
fixPath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\FileScopedTagFilteringReader.cpp	/^std::string fixPath(std::string p_path)$/;"	f	language:C++	namespace:CTagsPlugin::__anon27f2ae8a0108	typeref:typename:std::string
fun_clearTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_clearTags()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_findTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_findTag()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_generateTagsFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_generateTagsFile()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_info	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_info()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_nextTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_nextTag()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_previousTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_previousTag()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_setTagsFiles	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_setTagsFiles()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
fun_tagInfo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void fun_tagInfo()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
g_plugin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\dllmain.cpp	/^NppPlugin::TagsPlugin g_plugin;$/;"	v	language:C++	typeref:typename:NppPlugin::TagsPlugin
generate	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^void CTagsGenerator::generate(const std::string& p_outFile, const std::vector<std::string>& p_so/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:void
generateTagFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::generateTagFile()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
generateTagSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey generateTagSk = {true,  true, false, 'G'};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
generateTagsCommand	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsGenerator.cpp	/^std::string CTagsGenerator::generateTagsCommand(const std::string& p_outFile, const std::string&/;"	f	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::string
generateTagsFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::generateTagsFile()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
getAcces	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^CppTag::Access getAcces(const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:CppTag::Access
getChildrenTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^std::vector<TagHolder> CTagsNavigator::getChildrenTags(const TagHolder& p_parentTag)$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:std::vector<TagHolder>
getComment	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::string getComment(const std::string& p_line)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::string
getComplexTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^std::vector<TagHolder> CTagsNavigator::getComplexTags(const std::string& p_complexTagName)$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:std::vector<TagHolder>
getCtagsPath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^std::string ConfigGetter::getCtagsPath() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:std::string
getCurrentLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^Location CTagsNavigator::getCurrentLocation() const$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:Location
getCurrentWord	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^std::string CTagsController::getCurrentWord() const$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:std::string
getEnvVar	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^boost::optional<std::string> getEnvVar(const std::string& p_envVarName)$/;"	f	language:C++	namespace:CTagsPlugin::__anonaf07affa0108	typeref:typename:boost::optional<std::string>
getFileDir	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^std::string getFileDir(std::string p_filePath)$/;"	f	language:C++	namespace:CTagsPlugin::__anond0a2720f0108	typeref:typename:std::string
getFileFormat	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^FileFormat getFileFormat(const std::string& p_commentLine)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:FileFormat
getFileName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^std::string getFileName(const std::string& p_path)$/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:std::string
getFileName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string getFileName(const std::string& p_filePath)$/;"	f	language:C++	namespace:CTagsPlugin::__anondcd3c7390108	typeref:typename:std::string
getFileName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^Tag getFileName(const Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin::__anonb69117c90108	typeref:typename:Tag
getKind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^CppTag::Kind getKind(const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:CppTag::Kind
getKind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagBuilder.cpp	/^std::string getKind(const std::vector<Field>& p_extFields)$/;"	f	language:C++	namespace:CTagsPlugin::__anon729d213f0108	typeref:typename:std::string
getLanguage	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^boost::optional<std::string> getLanguage(const std::vector<Field>& fields)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:boost::optional<std::string>
getLanguageBuilder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^TagBuilder getLanguageBuilder(const boost::optional<std::string>& p_language)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagBuilder
getLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^std::string TagFile::getLine()$/;"	f	language:C++	class:CTagsPlugin::TagFile	typeref:typename:std::string
getName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::string getName(const std::string& p_line)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:std::string
getNameLastPart	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^std::string getNameLastPart(const std::string& p_fullName)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp::__anonb59a7c0f0108	typeref:typename:std::string
getOption	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^boost::optional<std::string> ConfigGetter::getOption(const std::string& p_paramName) const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:boost::optional<std::string>
getParam	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^std::string ConfigGetter::getParam(const std::string& p_paramName,$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:std::string
getParentName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^boost::optional<std::string> getParentName(const std::string& p_tagName)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp::__anonb59a7c0f0108	typeref:typename:boost::optional<std::string>
getPluginsConfigDir	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^std::string TagsPlugin::getPluginsConfigDir()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:std::string
getReadTagsPath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^std::string ConfigGetter::getReadTagsPath() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:std::string
getSelectTagsViewType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^SelectTagsViewType ConfigGetter::getSelectTagsViewType() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:SelectTagsViewType
getSourceDirs	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^std::vector<std::string> CTagsController::getSourceDirs() const$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:std::vector<std::string>
getSupportedExtensionFileds	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^Fields ConfigGetter::getSupportedExtensionFileds() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:Fields
getTagsFilesPaths	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^std::vector<std::string> ConfigGetter::getTagsFilesPaths() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:std::vector<std::string>
getTagsReaderType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^TagReaderType ConfigGetter::getTagsReaderType() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:TagReaderType
getTagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^boost::shared_ptr<CTagsPlugin::ITagsSelector> TagsPlugin::getTagsSelector()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsSelector>
getTargetFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^std::string CTagsController::getTargetFile() const$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:std::string
getValue	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^std::string ConfigGetter::getValue(const boost::property_tree::ptree::value_type& p_treeElem) co/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:std::string
gnerateTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::gnerateTags()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
goTo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^void CTagsNavigator::goTo(const TagHolder& p_tag)$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:void
goTo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^void CTagsNavigator::goTo(const std::string& p_tagName)$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:void
goTo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::goTo(unsigned int p_locationIndex)$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
goToChildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^void CTagsNavigator::goToChildTag(const std::string& p_parentTagName)$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:void
goToCurrentLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::goToCurrentLocation()$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
goToNextLocation	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::goToNextLocation()$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
goToPreviousLocaton	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^void Navigator::goToPreviousLocaton()$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:void
hasFileField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^bool hasFileField(const std::vector<Field>& p_extensions)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
info	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::info()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
inherits	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^    bool inherits;$/;"	m	language:C++	struct:CTagsPlugin::Fields	typeref:typename:bool	access:public
init	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::init(HINSTANCE p_hModule)$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
initFunctionsTable	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::initFunctionsTable()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
invokeBuilder	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^    TagHolder invokeBuilder(const std::vector<Field>& p_fields)$/;"	f	language:C++	struct:CTagsPlugin::CppTagBuilderTS	typeref:typename:TagHolder	file:	access:public
isAnyOf	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^bool isAnyOf(const std::string& p_value, const std::set<std::string>& p_set)$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:bool
isChildTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^bool isChildTag(const std::string& p_parentName, const Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
isComplexTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^bool isComplexTag(const Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
isFileScoped	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^	bool isFileScoped;$/;"	m	language:C++	struct:CTagsPlugin::Tag	typeref:typename:bool	access:public
isFileSortedCommentLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^bool isFileSortedCommentLine(const std::string& p_commentLine)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:bool
isLoctionOnQueueTop	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^bool Navigator::isLoctionOnQueueTop(const Location& p_location) const$/;"	f	language:C++	class:CTagsPlugin::Navigator	typeref:typename:bool
isNumber	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^bool isNumber(const std::string& p_string)$/;"	f	language:C++	namespace:CTagsPlugin::__anone618ad160108	typeref:typename:bool
isNumber	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^bool isNumber(const std::string& p_string)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
isPositionNewLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^bool isPositionNewLine(long pos, std::ifstream& file)$/;"	f	language:C++	namespace:CTagsPlugin::__anon9d41adb50108	typeref:typename:bool
isShortenedKindField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^bool isShortenedKindField(const std::string& p_field)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
isTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IsTag.hpp	/^bool isTag(const Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
isTagWithName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagMatchersTS.cpp	/^bool isTagWithName(const std::string& p_name, const Tag& p_tag)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    CppTag::Kind kind;$/;"	m	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:CppTag::Kind	access:public
kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^    bool kind;$/;"	m	language:C++	struct:CTagsPlugin::Fields	typeref:typename:bool	access:public
kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTag.hpp	/^    std::string kind;$/;"	m	language:C++	struct:CTagsPlugin::GenericKindTag	typeref:typename:std::string	access:public
kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^std::string TagPrinter::kind(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::TagPrinter	typeref:typename:std::string
kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GenericKindTagPrinter.cpp	/^std::string GenericKindTagPrinter::kind(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::GenericKindTagPrinter	typeref:typename:std::string
kind	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::kind(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
lineNumber	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    int lineNumber;$/;"	m	language:C++	struct:CTagsPlugin::Location	typeref:typename:int	access:public
loadConfigFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^void ConfigGetter::loadConfigFile(const std::string& p_configFilePath)$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:void
loadConfigFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::loadConfigFile()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
m_call	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    std::function<void(void)> m_call;$/;"	m	language:C++	class:CTagsPlugin::AsyncCall	typeref:typename:std::function<void (void)>	access:private
m_config	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^	IConfiguration& m_config;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:IConfiguration &	access:private
m_config	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\MultipleTagFilesReader.hpp	/^    IConfiguration& m_config;$/;"	m	language:C++	class:CTagsPlugin::MultipleTagFilesReader	typeref:typename:IConfiguration &	access:private
m_config	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	CTagsPlugin::ConfigGetter m_config;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:CTagsPlugin::ConfigGetter	access:private
m_config	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^	IConfiguration& m_config;$/;"	m	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:IConfiguration &	access:private
m_config	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagPrinter.hpp	/^    const IConfiguration& m_config;$/;"	m	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:const IConfiguration &	access:protected
m_configFilePath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	std::string m_configFilePath;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:std::string	access:private
m_ctagsExePath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsGenerator.hpp	/^    std::string m_ctagsExePath;$/;"	m	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:std::string	access:private
m_currentLocationIndex	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    int m_currentLocationIndex;$/;"	m	language:C++	class:CTagsPlugin::Navigator	typeref:typename:int	access:private
m_dirsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    boost::shared_ptr<Plugin::IPathsSelector> m_dirsSelector;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:boost::shared_ptr<Plugin::IPathsSelector>	access:private
m_fields	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsGenerator.hpp	/^    const Fields m_fields;$/;"	m	language:C++	class:CTagsPlugin::CTagsGenerator	typeref:typename:const Fields	access:private
m_file	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^        std::ifstream* m_file;$/;"	m	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:std::ifstream *	access:private
m_file	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^    std::ifstream m_file;$/;"	m	language:C++	class:CTagsPlugin::TagFile	typeref:typename:std::ifstream	access:private
m_filesSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    boost::shared_ptr<Plugin::IPathsSelector> m_filesSelector;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:boost::shared_ptr<Plugin::IPathsSelector>	access:private
m_funcItems	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	FuncItem m_funcItems[s_funcNum];$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:FuncItem[]	access:public
m_genTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    AsyncCall m_genTags;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:AsyncCall	access:private
m_hModule	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GridViewTagsSelector.hpp	/^	HINSTANCE& m_hModule;$/;"	m	language:C++	class:CTagsPlugin::GridViewTagsSelector	typeref:typename:HINSTANCE &	access:private
m_hModule	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	HINSTANCE m_hModule;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:HINSTANCE	access:public
m_isInitialized	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	bool m_isInitialized;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:bool	access:public
m_kinds	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^    std::set<CppTag::Kind> m_kinds;$/;"	m	language:C++	class:CTagsPlugin::Cpp::IsSelectedKindTag	typeref:typename:std::set<CppTag::Kind>	file:	access:private
m_locationGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    boost::shared_ptr<Plugin::ILocationGetter> m_locationGetter;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:boost::shared_ptr<Plugin::ILocationGetter>	access:private
m_locationGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^    boost::shared_ptr<Plugin::ILocationGetter> m_locationGetter;$/;"	m	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:boost::shared_ptr<Plugin::ILocationGetter>	access:private
m_locationGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\FileScopedTagFilteringReader.hpp	/^	boost::shared_ptr<Plugin::ILocationGetter> m_locationGetter;$/;"	m	language:C++	class:CTagsPlugin::FileScopedTagFilteringReader	typeref:typename:boost::shared_ptr<Plugin::ILocationGetter>	access:private
m_locationGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    boost::shared_ptr<Plugin::ILocationGetter> m_locationGetter;$/;"	m	language:C++	class:CTagsPlugin::Navigator	typeref:typename:boost::shared_ptr<Plugin::ILocationGetter>	access:private
m_locationSetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    boost::shared_ptr<Plugin::ILocationSetter> m_locationSetter;$/;"	m	language:C++	class:CTagsPlugin::Navigator	typeref:typename:boost::shared_ptr<Plugin::ILocationSetter>	access:private
m_locations	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Navigator.hpp	/^    std::vector<Location> m_locations;$/;"	m	language:C++	class:CTagsPlugin::Navigator	typeref:typename:std::vector<Location>	access:private
m_locationsNavigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    Navigator m_locationsNavigator;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:Navigator	access:private
m_lock	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    std::mutex m_lock;$/;"	m	language:C++	class:CTagsPlugin::AsyncCall	typeref:typename:std::mutex	access:private
m_matcher	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^    TagMatcher m_matcher;$/;"	m	language:C++	class:CTagsPlugin::Cpp::IsComplexTag	typeref:typename:TagMatcher	access:private
m_matchers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagMatchers.hpp	/^    const TagMatchers m_matchers;$/;"	m	language:C++	class:CTagsPlugin::CompositeMatcher	typeref:typename:const TagMatchers	access:private
m_maxNameLength	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	size_t m_maxNameLength;$/;"	m	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:size_t	file:	access:private
m_maxPathLength	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	size_t m_maxPathLength;$/;"	m	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:size_t	file:	access:private
m_messagePrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    boost::shared_ptr<Plugin::IMessagePrinter> m_messagePrinter;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:boost::shared_ptr<Plugin::IMessagePrinter>	access:private
m_name	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^    std::string m_name;$/;"	m	language:C++	class:CTagsPlugin::Cpp::IsTagWithName	typeref:typename:std::string	access:private
m_navigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^    Navigator& m_navigator;$/;"	m	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:Navigator &	access:private
m_nppData	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GridViewTagsSelector.hpp	/^    NppData& m_nppData;$/;"	m	language:C++	class:CTagsPlugin::GridViewTagsSelector	typeref:typename:NppData &	access:private
m_nppData	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	NppData m_nppData;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:NppData	access:public
m_options	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ConfigGetter.hpp	/^    boost::property_tree::ptree m_options;$/;"	m	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:boost::property_tree::ptree	access:private
m_parentTagName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTagMatchers.hpp	/^    std::string m_parentTagName;$/;"	m	language:C++	class:CTagsPlugin::Cpp::IsChildTag	typeref:typename:std::string	access:private
m_pathGetter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    boost::shared_ptr<Plugin::IPathGetter> m_pathGetter;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:boost::shared_ptr<Plugin::IPathGetter>	access:private
m_pos	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFile.hpp	/^        long m_pos;$/;"	m	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:long	access:private
m_printer	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GridViewTagsSelector.hpp	/^    std::shared_ptr<ITagPrinter> m_printer;$/;"	m	language:C++	class:CTagsPlugin::GridViewTagsSelector	typeref:typename:std::shared_ptr<ITagPrinter>	access:private
m_printer	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^    boost::shared_ptr<NppPlugin::NppMessagePrinter> m_printer;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<NppPlugin::NppMessagePrinter>	access:private
m_printer	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^	boost::shared_ptr<Plugin::IMessagePrinter> m_printer;$/;"	m	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:boost::shared_ptr<Plugin::IMessagePrinter>	access:private
m_printers	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CompositeTagPrinter.hpp	/^    Printers m_printers;$/;"	m	language:C++	class:CTagsPlugin::CompositeTagPrinter	typeref:typename:Printers	access:private
m_reader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\FileScopedTagFilteringReader.hpp	/^	boost::shared_ptr<ITagsReader> m_reader;$/;"	m	language:C++	class:CTagsPlugin::FileScopedTagFilteringReader	typeref:typename:boost::shared_ptr<ITagsReader>	access:private
m_readerFactory	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\MultipleTagFilesReader.hpp	/^    TagReaderFactory m_readerFactory;$/;"	m	language:C++	class:CTagsPlugin::MultipleTagFilesReader	typeref:typename:TagReaderFactory	access:private
m_selector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^    boost::shared_ptr<CTagsPlugin::ITagsSelector> m_selector;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::ITagsSelector>	access:private
m_selector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagsSelector.hpp	/^	boost::shared_ptr<Plugin::IItemsSelector> m_selector;$/;"	m	language:C++	class:CTagsPlugin::TagsSelector	typeref:typename:boost::shared_ptr<Plugin::IItemsSelector>	access:private
m_selectorFactory	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^    SelectorFactory m_selectorFactory;$/;"	m	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:SelectorFactory	access:private
m_tag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagHolder.hpp	/^    std::unique_ptr<Tag> m_tag;$/;"	m	language:C++	class:CTagsPlugin::TagHolder	typeref:typename:std::unique_ptr<Tag>	access:private
m_tag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	std::string m_tag;$/;"	m	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:std::string	file:	access:private
m_tagFilePath	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\TagFileReader.hpp	/^    std::function<std::string()> m_tagFilePath;$/;"	m	language:C++	class:CTagsPlugin::TagFileReader	typeref:typename:std::function<std::string ()>	access:private
m_tagInfo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    AsyncCall m_tagInfo;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:AsyncCall	access:private
m_tagsController	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^    boost::shared_ptr<CTagsPlugin::CTagsController> m_tagsController;$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:boost::shared_ptr<CTagsPlugin::CTagsController>	access:private
m_tagsFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ReadTagsProxy.hpp	/^    TagFilePathProvider m_tagsFile;$/;"	m	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:TagFilePathProvider	access:private
m_tagsNavigator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^	CTagsNavigator m_tagsNavigator;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:CTagsNavigator	access:private
m_tagsReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsNavigator.hpp	/^    boost::shared_ptr<ITagsReader> m_tagsReader;$/;"	m	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:boost::shared_ptr<ITagsReader>	access:private
m_textReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CTagsController.hpp	/^    boost::shared_ptr<Plugin::ITextReader> m_textReader;$/;"	m	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:boost::shared_ptr<Plugin::ITextReader>	access:private
main	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsHierarchy.cpp	/^int main()$/;"	f	language:C++	typeref:typename:int
makeMatcher	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^std::pair<ShouldApply, TagMatcher> makeMatcher(TagMatcher p_matcher)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::pair<ShouldApply,TagMatcher>
makePrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinters.cpp	/^Printer makePrinter(const IConfiguration& p_config)$/;"	f	language:C++	namespace:CTagsPlugin::__anon7c10022c0108	typeref:typename:Printer
myTest1	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void myTest1()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
myTest2	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void myTest2()$/;"	f	language:C++	namespace:NppPlugin	typeref:typename:void
name	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^    std::string name;$/;"	m	language:C++	struct:CTagsPlugin::Field	typeref:typename:std::string	access:public
name	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    std::string name;$/;"	m	language:C++	struct:CTagsPlugin::Tag	typeref:typename:std::string	access:public
name	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::name(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
nameMaxLength	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	size_t nameMaxLength;$/;"	m	language:C++	struct:CTagsPlugin::__anonb69117c90108::MaxLengthGetter	typeref:typename:size_t	file:	access:public
next	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::next()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
nextLineBegin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^long nextLineBegin(long pos, std::ifstream& file)$/;"	f	language:C++	namespace:CTagsPlugin::__anon9d41adb50108	typeref:typename:long
nextTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::nextTag()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
nextTagSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey nextTagSk     = {false, true, false, VK_RIGHT};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
operator !=	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^bool TagFile::Iterator::operator!=(const Iterator& p_iter) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:bool
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^bool AsyncCall::operator()()$/;"	f	language:C++	class:CTagsPlugin::AsyncCall	typeref:typename:bool
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^    bool operator()(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsSelectedKindTag	typeref:typename:bool	file:	access:public
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^bool IsChildTag::operator()(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsChildTag	typeref:typename:bool
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^bool IsComplexTag::operator()(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsComplexTag	typeref:typename:bool
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagMatchers.cpp	/^bool IsTagWithName::operator()(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::IsTagWithName	typeref:typename:bool
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagMatchers.cpp	/^bool CompositeMatcher::operator()(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::CompositeMatcher	typeref:typename:bool
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	void operator()(const Tag& p_tag)$/;"	f	language:C++	struct:CTagsPlugin::__anonb69117c90108::MaxLengthGetter	typeref:typename:void	file:	access:public
operator ()	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^std::string ToStringConverter::operator()(const Tag& p_tag)$/;"	f	language:C++	class:CTagsPlugin::__anonb69117c90108::ToStringConverter	typeref:typename:std::string
operator *	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^std::string TagFile::Iterator::operator*() const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:std::string
operator +	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator TagFile::Iterator::operator+(long p_amount) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:TagFile::Iterator
operator ++	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator& TagFile::Iterator::operator++()$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:TagFile::Iterator &
operator -	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator TagFile::Iterator::operator-(long p_amount) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:TagFile::Iterator
operator -	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^long TagFile::Iterator::operator-(const Iterator& p_iter) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:long
operator --	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator& TagFile::Iterator::operator--()$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:TagFile::Iterator &
operator ->	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^const Tag* TagHolder::operator->() const$/;"	f	language:C++	class:CTagsPlugin::TagHolder	typeref:typename:const Tag *
operator <	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^bool TagFile::Iterator::operator<(const Iterator& p_iter) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:bool
operator <<	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^std::ostream& operator <<( std::ostream& p_stream, const CTagsPlugin::Field& p_filed )$/;"	f	language:C++	typeref:typename:std::ostream &
operator <=	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^bool TagFile::Iterator::operator<=(const Iterator& p_iter) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:bool
operator =	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^TagFile::Iterator& TagFile::Iterator::operator=(const Iterator& p_iter)$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:TagFile::Iterator &
operator =	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagHolder.cpp	/^TagHolder& TagHolder::operator=(const TagHolder& p_tag)$/;"	f	language:C++	class:CTagsPlugin::TagHolder	typeref:typename:TagHolder &
operator ==	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Navigator.cpp	/^bool operator==(const Location& p_lhs, const Location& p_rhs)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
operator ==	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^bool TagFile::Iterator::operator==(const Iterator& p_iter) const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:bool
operator ==	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^bool operator==(const Field& p_lhs, const Field& p_rhs)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
operator ==	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^bool operator==(const Tag& p_lhs, const Tag& p_rhs)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
parseAddrField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::string parseAddrField(const std::string& p_TagFileLine)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::string
parseComment	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^FileFormat parseComment(TagFile& p_tagFile)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:FileFormat
parseEnum	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagBuilder.cpp	/^EnumType parseEnum(const std::vector<Field>& p_extFields,$/;"	f	language:C++	namespace:CTagsPlugin::Cpp	typeref:typename:EnumType
parseExtensionFields	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::vector<Field> parseExtensionFields(const std::string& p_tagFileLineComment)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::vector<Field>
parseLineNumberInAddr	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::string parseLineNumberInAddr(const std::string& p_TagFileLine)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::string
parseLines	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> parseLines(TagFile& p_tagFile, const TagMatcher& p_matcher)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:std::vector<TagHolder>
parseListTagsOutput	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^std::vector<TagHolder> ReadTagsProxy::parseListTagsOutput(const std::string& p_output, TagMatche/;"	f	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:std::vector<TagHolder>
parseReadTagsOutput	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ReadTagsProxy.cpp	/^std::vector<TagHolder> ReadTagsProxy::parseReadTagsOutput(const std::string& p_output) const$/;"	f	language:C++	class:CTagsPlugin::ReadTagsProxy	typeref:typename:std::vector<TagHolder>
parseTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^TagHolder parseTag(const std::string& p_TagFileLine)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:TagHolder
parseTagWithBaseFields	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^Tag parseTagWithBaseFields(const std::string& p_TagFileLine, const std::vector<Field>& p_extensi/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:Tag
parseUnsortedFileLines	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> parseUnsortedFileLines(TagFile& p_tagFile, const std::string& p_tagName)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:std::vector<TagHolder>
path	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    std::string path;$/;"	m	language:C++	struct:CTagsPlugin::Tag	typeref:typename:std::string	access:public
path	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::path(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
pathMaxLength	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^	size_t pathMaxLength;$/;"	m	language:C++	struct:CTagsPlugin::__anonb69117c90108::MaxLengthGetter	typeref:typename:size_t	file:	access:public
previous	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::previous()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
previousLineBegin	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^long previousLineBegin(long pos, std::ifstream& file)$/;"	f	language:C++	namespace:CTagsPlugin::__anon9d41adb50108	typeref:typename:long
previousTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::previousTag()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
previousTagSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey previousTagSk = {false, true, false, VK_LEFT};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
print	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CompositeTagPrinter.cpp	/^std::vector<std::string> CompositeTagPrinter::print(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::CompositeTagPrinter	typeref:typename:std::vector<std::string>
print	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::vector<std::string> TagPrinter::print(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::vector<std::string>
prototype	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^    bool prototype;$/;"	m	language:C++	struct:CTagsPlugin::Fields	typeref:typename:bool	access:public
readLine	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFile.cpp	/^std::string TagFile::Iterator::readLine() const$/;"	f	language:C++	class:CTagsPlugin::TagFile::Iterator	typeref:typename:std::string
removeLegacyOptions	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^void ConfigGetter::removeLegacyOptions()$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:void
s_funcNum	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Plugin.hpp	/^	static const int s_funcNum = 10;\/\/10 functions (12 with test functions);$/;"	m	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:const int	access:public
saveConfigFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^void ConfigGetter::saveConfigFile(const std::string& p_configFilePath)$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:void
searchInSortedFile	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^std::vector<TagHolder> searchInSortedFile(TagFile& p_file, const std::string& p_tagName)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:std::vector<TagHolder>
selectTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsNavigator.cpp	/^TagHolder CTagsNavigator::selectTag(const std::vector<TagHolder>& p_tags)$/;"	f	language:C++	class:CTagsPlugin::CTagsNavigator	typeref:typename:TagHolder
selectTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\GridViewTagsSelector.cpp	/^int GridViewTagsSelector::selectTag(const std::vector<TagHolder>& p_tags)$/;"	f	language:C++	class:CTagsPlugin::GridViewTagsSelector	typeref:typename:int
selectTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^int TagsSelector::selectTag(const std::vector<TagHolder>& p_tags)$/;"	f	language:C++	class:CTagsPlugin::TagsSelector	typeref:typename:int
setCommand	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^bool TagsPlugin::setCommand(size_t index, TCHAR *cmdName, PFUNCPLUGINCMD pFunc, ShortcutKey *sk)$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:bool
setMandatoryOptions	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^void ConfigGetter::setMandatoryOptions()$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:void
setOptionIfNotPresent	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^void ConfigGetter::setOptionIfNotPresent(const std::string& p_name, const std::string& p_value)$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:void
setSeparator	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::setSeparator(size_t index)$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
setTagFiles	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::setTagFiles()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
setTagFilesSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey setTagFilesSk = {true,  true, false, 'O'};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
setTagsFiles	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::setTagsFiles()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
setTagsFilesPaths	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^void ConfigGetter::setTagsFilesPaths(const std::vector<std::string>& p_tagsFiles)$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:void
shouldFilterFileScopedTags	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^bool ConfigGetter::shouldFilterFileScopedTags() const$/;"	f	language:C++	class:CTagsPlugin::ConfigGetter	typeref:typename:bool
showTagInfo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::showTagInfo()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
signature	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    std::string signature;$/;"	m	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:std::string	access:public
size	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    virtual size_t size()$/;"	f	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:size_t	access:public
size	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\GenericKindTag.hpp	/^    virtual size_t size()$/;"	f	language:C++	struct:CTagsPlugin::GenericKindTag	typeref:typename:size_t	access:public
size	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    virtual size_t size() const$/;"	f	language:C++	struct:CTagsPlugin::Tag	typeref:typename:size_t	access:public
skipComment	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^void skipComment(TagFile& p_tagFile)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:void
tagInfo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CTagsController.cpp	/^void CTagsController::tagInfo()$/;"	f	language:C++	class:CTagsPlugin::CTagsController	typeref:typename:void
tagInfo	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::tagInfo()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
tagInfoSk	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^static ShortcutKey tagInfoSk     = {true,  true, false, 'T'};$/;"	v	language:C++	namespace:NppPlugin	typeref:typename:ShortcutKey	file:
tagName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\CppTagBuilderTS.cpp	/^const std::string tagName = "name";$/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
tagName	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^const std::string tagName = "tagName";$/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
tagaddr	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^const std::string tagaddr = "bool class::tagName(const type& p_path, const std::type& p_extensio/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
tagaddrWithLineNumberOnly	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^const std::string tagaddrWithLineNumberOnly = "54";$/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
tagaddrWithSpaces	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^const std::string tagaddrWithSpaces = "  bool class::tagName(const type& p_path, const std::type/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
tagaddrWithTab	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Tests\\TagParserTS.cpp	/^const std::string tagaddrWithTab = "bool class::tagName(const type& p_path,\\tconst std::type& p/;"	v	language:C++	namespace:CTagsPlugin	typeref:typename:const std::string
test1	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::test1()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
test2	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\Plugin.cpp	/^void TagsPlugin::test2()$/;"	f	language:C++	class:NppPlugin::TagsPlugin	typeref:typename:void
titles	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::vector<std::string> TagPrinter::titles() const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::vector<std::string>
toBool	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^bool toBool(const std::string& p_value)$/;"	f	language:C++	namespace:CTagsPlugin::__anonaf07affa0108	typeref:typename:bool
toField	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^Field toField(const std::string& p_field)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:Field
toFields	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^std::vector<Field> toFields(const std::string& p_extensions)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:std::vector<Field>
toSelectTagsViewType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^SelectTagsViewType toSelectTagsViewType(const std::string& p_type)$/;"	f	language:C++	namespace:CTagsPlugin::__anonaf07affa0108	typeref:typename:SelectTagsViewType
toString	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^std::string toString(const Tag& p_tag, const MemberType CppTag::*p_member, const std::map<Member/;"	f	language:C++	namespace:CTagsPlugin::Cpp::__anon0034f75c0108	typeref:typename:std::string
toTagReaderType	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^TagReaderType toTagReaderType(const std::string& p_type)$/;"	f	language:C++	namespace:CTagsPlugin::__anonaf07affa0108	typeref:typename:TagReaderType
trim	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string trim(std::string p_toTrim)$/;"	f	language:C++	namespace:CTagsPlugin::__anondcd3c7390108	typeref:typename:std::string
trim	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagsSelector.cpp	/^std::string trim(std::string p_toTrim)$/;"	f	language:C++	namespace:CTagsPlugin::__anonb69117c90108	typeref:typename:std::string
trySetFormat	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagFileReader.cpp	/^void trySetFormat(FileFormat& p_format, const std::string& p_line)$/;"	f	language:C++	namespace:CTagsPlugin::__anon4c9e38480108	typeref:typename:void
type	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\CppTag.hpp	/^    std::string type;$/;"	m	language:C++	struct:CTagsPlugin::CppTag	typeref:typename:std::string	access:public
type	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\CppTagPrinter.cpp	/^std::string TagPrinter::type(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::Cpp::TagPrinter	typeref:typename:std::string
type	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagPrinter.cpp	/^std::string TagPrinter::type(const Tag& p_tag) const$/;"	f	language:C++	class:CTagsPlugin::TagPrinter	typeref:typename:std::string
typeref	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ExtensionFields.hpp	/^    bool typeref;$/;"	m	language:C++	struct:CTagsPlugin::Fields	typeref:typename:bool	access:public
validateTag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\TagParser.cpp	/^bool validateTag(const std::string& p_TagFileLine)$/;"	f	language:C++	namespace:CTagsPlugin	typeref:typename:bool
value	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\BuildTag.hpp	/^    std::string value;$/;"	m	language:C++	struct:CTagsPlugin::Field	typeref:typename:std::string	access:public
valueOr	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Source\\ConfigGetter.cpp	/^OutputType valueOr(const InputType& p_value, const std::map<InputType, OutputType>& p_conversion/;"	f	language:C++	namespace:CTagsPlugin::__anonaf07affa0108	typeref:typename:OutputType
~IConfiguration	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\IConfiguration.hpp	/^    virtual ~IConfiguration() {}$/;"	f	language:C++	struct:CTagsPlugin::IConfiguration	typeref:typename:virtual	access:public
~ITagPrinter	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagPrinter.hpp	/^    virtual ~ITagPrinter() {}$/;"	f	language:C++	struct:CTagsPlugin::ITagPrinter	typeref:typename:virtual	access:public
~ITagsReader	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsReader.hpp	/^	virtual ~ITagsReader() {}$/;"	f	language:C++	struct:CTagsPlugin::ITagsReader	typeref:typename:virtual	access:public
~ITagsSelector	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\ITagsSelector.hpp	/^    virtual ~ITagsSelector() {}$/;"	f	language:C++	struct:CTagsPlugin::ITagsSelector	typeref:typename:virtual	access:public
~Tag	D:\\test\\EditorPlugins\\nppCtagPlugin\\Tests\\TestSourceCode\\Include\\Tag.hpp	/^    virtual ~Tag(){};$/;"	f	language:C++	struct:CTagsPlugin::Tag	typeref:typename:virtual	access:public
